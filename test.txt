语言特性
1.谈谈对Python和其他语言的区别?
..Python是一门语法简洁优美。功能强大，应用领域广泛，具有强大完备的第三方库的弱类型的可移植的，可扩展的，以及可嵌入的解释型的编程语言。

2.简述解释型和编译型编程语言？
..解释型：边解释边执行，如python、php
..编译型：编译后执行，如C、java、C#

3.Python的解释器种类以及相关特点？
..CPython
官方版的解释器：CPython。是使用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。
CPython是使用最广的Python解释器。
..IPython
IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。CPython用>>>作为提示符，而IPython是用In[序号]：作为提示符。

4.说说你知道的Python3和Python2之间的区别？
1)：打印时，py3需要可以不需要加括号，py3需要
Python 2 : print(‘abab’) , print ‘abab’
Python 3 : print(‘abab’)
Python 3 必须加括号

exec语句被python3废弃，统一使用exec函数

2)：内涵
Python2 : 1、臃肿，源码的重复量很多。
2、语法不清晰，掺杂着C、php,、java的一些陋习。
Python3 : 几乎是重构后的源码，规范，清晰，优美。

3)：输出中文的区别
Python2 : 要输出中文 需加 # -*- encoding:utf-8 -*-
Python3 : 直接输出

4)input不同
Python2 : raw_input
Python3 :input 统一使用input函数

5)指定字节
Python2在编译安装时，可以通过参数-----enable-unicode=ucs2 或-----enable-unicode=ucs4分别用于指定使用指定2个字节、4个字节表示一个unicode;
Python3无法进行选择，默认使用ucs4
查看当前python中表示unicode字符串时占用的空间：
Import sys
print (sys.maxunicode)
# 如果值是65535，则表示使用usc2标准，即：2个字节
# 如果值是1114111，则表示usc4标准，即：4个字节表示

6).
Python2:xrange
range
Python3:range 统一使用range,Python3中range的机制也进行修改并提高了大数据集生成效率

7)在包的知识点里
包：一群模块文件的集合+__init__
区别：python2 : 必须有__init__
Python3 : 不是必须的了

8)不相等操作”<>”被Python3废弃，统一使用”!=”

9)long整数类型被类型Python3废弃，统一使用int

10)迭代器interator的next()函数被Python3废弃，统一使用next(iterator)

11)异常StandardError 被Python3废弃，统一使用Excwpption

12)字典变量的has_key函数被Python废弃，统一使用in关键字

13)File函数被Python3废弃，统一使用open来处理文件，可以通过io.IOBase检查文件类型

5.Python3和Python2中in和long区别？
..在python3里，只有一种整数类型int,大多数情况下，和python2中的整型类似。

6.range 和 xrange 的区别？

range
函数说明：range([start,]stop[,step]),根据start与stop指定的范围以及step设定的步长，生成一个序列。

Xrange
函数说明:用法与range完全相同，所不同的是生成的不是一个数组，而是一个生成器。

..区别：都在循环时使用,range会直接生成一个list对象，而xrange则不会直接生成一个list,而是每次调用返回其中的一个值。所以xrange做循环的性能比range好，因为不需要一上来就开辟一块很大的内存空间。尤其是返回很大的时候。然而，事情并没有想象的那么简单，在Python3中xrange已被废弃，如果调用则会输出NameError：name ’xrange’ is not defined 的错误。而python3中的range其实就是上述Python2中的xrange.


编程规范

7.什么是PEP8?
..PEP8是一个编程规范，内容是如何让你的程序更具可读性的建议
其主要内容包括：
1)代码编排
2)文档编排
3)空格的使用
4)注释
5)文档描述
6)命名规范
7)编码建议等






8.了解Python之禅吗？
..每一门编程语言都有其自身的设计理念（或者说语言创造者的设计理念），称之为禅。Python作为一门高级的动态编程语言，只需要导入内置的this模块，便会自动打印出来。
>>>import this
The Zen of Python, by Tim Peters 
Beautiful is better than ugly. 
Explicit is better than implicit. 
Simple is better than complex. 
Complex is better than complicated. 
Flat is better than nested. 
Sparse is better than dense. 
Readability counts. 
Special cases aren't special enough to break the rules. 
Although practicality beats purity. 
Errors should never pass silently. 
Unless explicitly silenced. 
In the face of ambiguity, refuse the temptation to guess. 
There should be one-- and preferably only one --obvious way to do it. 
Although that way may not be obvious at first unless you're Dutch. 
Now is better than never. 
Although never is often better than *right* now. 
If the implementation is hard to explain, it's a bad idea. 
If the implementation is easy to explain, it may be a good idea. 
Namespaces are one honking great idea -- let's do more of those!



《蟒蛇之禅》(The Zen of Python)，蒂姆・彼得斯(Tim Peters)著
美丽总比丑陋好。
显式比隐式好。
简单总比复杂好。
复杂总比复杂好。
平的比嵌套的好。
稀疏总比密集好。
可读性。
特殊情况还不足以打破规则。
虽然实用性胜过纯洁性。
错误不应该悄无声息地过去。
除非显式地沉默。
面对模棱两可的情况，拒绝猜测的诱惑。
应该有一种――而且最好只有一种――显而易见的方法来做到这一点。
不过，除非你是荷兰人，否则这种方式一开始可能并不明显。
现在总比不做好。
虽然从来没有比“现在”更好。
如果实现很难解释，这是一个坏主意。
如果实现很容易解释，这可能是一个好主意。
名称空间是一个很棒的主意――让我们做更多这样的事情!
9.了解docstring类型吗?
..Docstring是文档字符串，它是字符串文字，它出现在类、模块，函数或者方法定义中，并作为第一个语句编写。可以从任何python对象的doc属性访问Docstrings,也可以使用内置的help()函数派上用场。
编写Docstirng的形式有两种：单行Docstrings和多行Docstrings。这些是数据科学家/程序员在其项目文档中使用的文档。不具备标准与规则。

10.了解类型注释吗？
..函数注解:在定义函数的同时指定参数类型。方便程序员在维护或运用别人的代码的时候能清晰的看懂传递了什么类型的参数。

11.列举你知道的python对象的命名规范，例如方法或者类？
..module_name，模块：尽量使用小写，尽量使用下划线。 
例：import myclass


..packge_name，包：包名应该是简短的、小写字母的单词，如需要改善可读性可加入下划线。
例：mypackage

..ClassName，类：使用驼峰法，单词首字母大小写，私有类可以下划线开头
例：class MyClass():
pass
class YouClass():
pass


..method_name，方法：方法名应该为小写，如有多个单词，可加入下划线增加可读性。
例:myfunction/ /my_example_function

..ExcetionName，异常：以“Error”作为后缀

..function_name，函数：[1]小写，必要时用下划线分隔，以提高可读性。;[2]私有函数在函数前加一个下划线_
例：[1] def run():
            pass
def run_with_env():
        pass
[2]class Person():
        
             def _private_fun()
                  pass



..GLOBAL_VAR_NAME，全局变量：通过M import *使用的模块应该使用__all__机制来防止输出全局变量，或者使用旧的约定这样的全局变量加上下划线，使用大写字母，并且以下划线分隔开单词。
例：MAX_LOAD 注：应避免使用全局变量

..instance_var_name，实例变量名：根据类创建出来的一个个具体的“对象”，以_开头，小写字母，单词之间用_分隔开。
例：_price  //  _instance_var


..function_parameter_name，参数：
始终使用self作为实例方法的第一个参数。
始终使用cls作为类方法的第一个参数。
如果函数参数的名称与保留关键字冲突，通常最好附加单个随下划线而不是使用缩写或拼写损坏。因此class_比clss好。（或许最好是通过使用同一词来避免这种冲突）

..constant常量：通常在模块级别定义，并以全部大写字母书写，下划线分隔单词。
例：MAX_OVERFLOW//TOAL

12.Python的注释有几种？
..#：单行注释   #this is a annotation
'''：单引号(''')  
例：
''' 
这是多行注释，用三个单引号 
这是多行注释，用三个单引号 
这是多行注释，用三个单引号 
'''

"""：双引号(""")
例：
"""  
这是多行注释，用三个双引号 
"""

13.如何优雅的给一个函数注释?
..函数注释需要注明三个参数：Args(参数)、Return(返回值)和Raises(抛出的错误)
def exampleFunc(one,two):
"""  
    这里是函数的功能


Args:one:参数一的注释
      Two:参数二的注释
Return:返回值的解释，如果返回值比较复杂，比如一个json数据，那么还需要将返回的格式卸载在这里
Raises:非必须的
"""</pre>

14.如何给变量加注释？
.. 模块级变量，类和实例变量以及局部变量的注释在冒号后应该有一个空格。
  冒号前应该没有空格。
  如果一个赋值有一个右手边，那么等号两边应该正好有一个空格。
例：
  code:int #冒号后没有空格
  code : int #冒号前有空格

  
  class Test:
     Result: int=0 #等号周围没有空格

15.Python代码缩进中是否支持Tab键和空格混用？
.. 虽然Python并没有强制要求你用Tab缩进或者用空格缩进，甚至空格按几个都没有强制要求(PEP8中建议使用四个空格作为缩进)，但是绝对不能混用Tab和空格。
混用Tab和空格指：相邻的两句的缩进需要统一使用tab或者统一使用空格，不能混用。
python中不提倡使用tab缩进，不同的编译器对于TAB的解释是不同的，有的编译器tab是4个字符宽，有的是8个字符宽.

16.是否可以给在一句import中导入多个库？
..不可以，一句import只能导入一个库(模块)，以及库下的类。

17.在给py文件命名的时候需要注意什么？
..避免文件名与系统或者第三方模块名重复，否则容易出现文件名与模块名冲突的问题。

18.列举几个规范python代码风格的工具？
..代码风格规范PEP8
..自动检测工具Pylint
..自动优化工具Black

数据类型

字符串
19.列举Python中的基本数据类型？
..Number(数字)
四种不同的数字类型：
int (有符号整型)
long(长整型[也可以代表八进制和十六进制])
float(浮点型)
complex(复数)

..String(字符串)
字符串和串(string)是由下划线、字母、数字组成的一串字符。
..List(列表)：用于嵌套
..Tuple(元组)
..Set(集合)
..Dictionary(字典)
其中属于集合类型的数据类型有 列表、元组及字典。

20.如何区别可变数据和不可变数据类型？
..可变数据(3个)：list(列表)、Dictionary(字典)、Set(集合)
..不可变数据(3个)：Number(数字)、String(字符串)、Tuple(元组)

21.将”hello world”首字母转换为大写如”Hello World”？
如下
str = "www.runoob.com"
print(str.upper())          # 把所有字符中的小写字母转换成大写字母
print(str.lower())          # 把所有字符中的大写字母转换成小写字母
print(str.capitalize())     # 把第一个字母转化为大写字母，其余小写
print(str.title())          # 把每个单词的第一个字母转化为大写，其余小写 
输出结果
WWW.RUNOOB.COM
www.runoob.com
Www.runoob.com
Www.Runoob.Com


22.如何检测字符串中只含有数字？
..用isdigit函数判断是否是数字，用isalphap判断是否字母，用isalnum判断是否数字和字母组合，
 如果字符串中含有除了字母或数字之外的字符，比如空格，也会返回false
判断是否数字：print(str_1.isdigit())
判断是否字母：print(str_1.isalphap())
判断是否为数字和字母的组合：print(str_1.isalnum())
判断是否为标点符号：
import string
punc = string.punctuation
if str_1 in punc:
    Print(‘is punctuation’)

23.将字符串”ilovechina”进行反转？
..建议字符串切片法
a=’ilovechina
a = a[::-1]
print(a)

输出结果：anihcevoli

24.Python中的字符串格式化方式你知道哪些？
..第一种：字符串切片法
..第二种：使用reversed()函数，可读性好，但速度较慢
..第三种：循环从字符串提取数据，然后进行字符串拼接（慢）
..第四种：循环从字符串提取数据，写入到一个空列表中，然后使用join进行字符串拼接（慢）
..第五种：使用字符串拼接（慢）
..第六种：使用reduce
..第七种：使用递归（慢）
..第八种：使用list()和reverser()配合
..第九种：使用栈。

25.有一个字符串开头和末尾都有空格，比如” adzbdw” ，要求写一个函数把这个字符串的前后空格都去掉？
..可以使用strip() , lstrip() , rstrip()方法
a=”adzbdw”.center(30)
print(a)
‘           adzbdw             ’
去左空格
b=a.lstrip()
print(b)
‘adzbdw             ’
去右空格
c=a.rstrip()
print(c)
‘           adzbdw’
去前后空格
d=a.strip()
print(d)
adzbdw
..还可以通过参数去掉其他字符，等价于replace

26.获取字符串” 123456 ”最后的两个字符？
..使用切片获取
str = “123456”
str[-2:]
‘56’

27.一个编码为GBK的字符串S,要将其转换成UTF-8编码的字符串，应该如何操作？
使用encode()
bytes.decode([encoding = "utf-8"][, errors = "strict"])
注意：是用什么格式进行编码就必须使用什么格式进行解码
str1 = "人生若只如初见"
byte1 = str1.encode("GBK")  # 采用GBK编码进行转换
byte2 = str1.encode("utf-8")  # 采用utf-8编码进行转换
print("原字符串：", str1)
print("GBK转换：", byte1)
print("utf-8转换：", byte2)
 
str2 = byte1.decode("utf-8")  # 使用错误方法进项解码
print("解码后：", str2)

输出结果：
原字符串： 人生若只如初见
GBK转换： b'\xc8\xcb\xc9\xfa\xc8\xf4\xd6\xbb\xc8\xe7\xb3\xf5\xbc\xfb'
utf-8转换： b'\xe4\xba\xba\xe7\x94\x9f\xe8\x8b\xa5\xe5\x8f\xaa\xe5\xa6\x82\xe5\x88\x9d\xe8\xa7\x81'
Traceback (most recent call last):
  File "C:/Users/XiangyangDai/Desktop/1.py", line 8, in <module>
    str2 = byte1.decode("utf-8")  # 使用错误方法进项解码
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc8 in position 0: invalid continuation byte


28.(1)s=”info:xiaoZhang 33 shandong”,用正则切分表达式
输出[‘info’, ’xianZhang’, ’33’, ‘shandong’] ？
(2) a = “你好 中国 ”，去掉多余空格只留一个空格？


..(1)

s=”info:xiaoZhang 33 shandong”
s.split()
结果：['info:', 'xiaoZhang', '33', 'shandong']
..(2)
str = “你好 中国 ”
mystr = str.rstrip()
print(mystr)

结果：’你好 中国’

29.（1）怎样将字符串转换为小写（2）单引号、双引号、三引号的区别？
（1）str=’WAR’
     Print(str.lower())
结果：war
（2）单引号和双引号都可以用来表示字符串如：
str1 = ‘python’
str2 = ”python”
     但如果遇到需要转义字符的情况下，单引号需要加反斜杠 ’ \ ’，双引号直接在字符串内加单引号括起来就可以，如：
str3 = ‘We all know that \’A\’ and \’B\’ are two capital letters.’
str4 = “We all know that ‘A’ and ‘B’ are two capital letters.”
反之，如果字符串中有双引号，为了避免使用字符串，可以使用单引号来定义这个字符串。
str5 = ‘We all know:The” HongKong ”is part of china.’
三引号包括3个单引号’’’...’’’和3个双引号”””...”””,两者作用相同，只需要注意如果字符串中包含单引号就要使用双引号来定义，使用三引号还有个功能就是：加注释
str6 = “””
...List of name:
...Hua li # 李华
..Zha Ne # 哪吒
”””
print(str6)

结果：List of name:
Hua li # 李华
Zha Ne # 哪吒
此外，多行注释也可以用三个单引号’’’注释’’’或者三个双引号”””注释”””将注释括起来。


列表
30.已知Alist = [1,2,3,1,2],对Alist列表元素去重，写出具体过程？
..Alist = [1,2,3,1,2]
..Alist = list(set(Alist))
..print(Alist)
..输出结果：[1，2，3]